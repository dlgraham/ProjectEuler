import java.util.Vector;

public class ConsecutivePrimeSum
{
	public static void main(String[] args)
	{
		Vector<Integer> primes = new Vector<Integer>();
		for(int i = 2; i < 1000000; i++)
		{
			if(isPrime(i))
			{
				primes.add(i);
			}
		}
		int sum = 0;
		int max = 0;
		int maxPrime = 0;
		for(int i = 0; i < primes.size(); i++)
		{
			sum = primes.get(i);
			for(int j = i + 1; j < primes.size() && sum + primes.get(j) < 1000000; j++)
			{
				sum += primes.get(j);
				if(isPrime(sum) && j - i > max)
				{
					max = j - i;
					maxPrime = sum;
				}
			}
		}
		System.out.println(maxPrime);
	}
	
	private static boolean isPrime(int num)
	{
		if (num == 1)
			return false;
		if (num == 2)
			return true;
		if (num % 2 == 0)
			return false;
		for (int i = 3; i * i <= num; i += 2)
			if (num % i == 0)
				return false;
		return true;
	}
}
