import java.util.Collections;
import java.util.Random;
import java.util.Vector;

public class CircularPrimes
{
	public static void main(String[] args)
	{
		int count = 0;
		for(int i = 2; i < 1000000; i++)
		{
			if(isPrime(i))
			{
				boolean allPrime = true;
				int temp = i;
				
				while(temp > 0)
				{
					if(i >= 10 && temp % 10 == 2)
					{
						allPrime = false;
					}
					if(i >= 10 && temp % 10 == 5)
					{
						allPrime = false;
					}
					temp /= 10;
				}
				if(allPrime == true)
				{
					temp = i;
					Vector<Integer> number = new Vector<Integer>();
					while(temp > 0)
					{
						number.add(temp % 10);
						temp /= 10;
					}
					for(int j = 0; j < number.size() && allPrime == true; j++)
					{
						
						number.add(number.get(0));
						number.remove(0);
						
						
						String str = "";
						for(int k = 0; k < number.size(); k++)
						{
							str = number.get(k) + str;
						}
						temp = Integer.parseInt(str);
						if(!isPrime(temp))
						{
							allPrime = false;
						}
					}
					
					if(allPrime == true)
					{
						System.out.println(i);
						count++;
					}
				}
			}
		}
		System.out.println(count);
	}

	
	
	private static boolean isPrime(int num)
	{
		if (num == 1 ) return true;
		if (num == 2 ) return true;
		if (num % 2 == 0) return false;
		for (int i = 3; i * i <= num; i += 2)
			if (num % i == 0) return false;
		return true;
	}
}
