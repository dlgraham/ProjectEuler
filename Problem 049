public class PrimePermutations
{
	public static void main(String[] args)
	{
		final int MAX = 10000;
		for(int i = 2; i < MAX; i++)
		{
			if(isPrime(i))
			{
				for(int j = i + 1; j < MAX; j++)
				{
					if(isPrime(i + j) && isPrime(i + j + j) && (i + j + j < MAX))
					{
						String num1 = Integer.toString(i);
						String num2 = Integer.toString(i + j);
						String num3 = Integer.toString(i + j + j);
						if(num1.contains("0") == num2.contains("0") && num2.contains("0") == num3.contains("0") &&
							num1.contains("1") == num2.contains("1") && num2.contains("1") == num3.contains("1") &&
							num1.contains("2") == num2.contains("2") && num2.contains("2") == num3.contains("2") &&
							num1.contains("3") == num2.contains("3") && num2.contains("3") == num3.contains("3") &&
							num1.contains("4") == num2.contains("4") && num2.contains("4") == num3.contains("4") &&
							num1.contains("5") == num2.contains("5") && num2.contains("5") == num3.contains("5") &&
							num1.contains("6") == num2.contains("6") && num2.contains("6") == num3.contains("6") &&
							num1.contains("7") == num2.contains("7") && num2.contains("7") == num3.contains("7") &&
							num1.contains("8") == num2.contains("8") && num2.contains("8") == num3.contains("8") &&
							num1.contains("9") == num2.contains("9") && num2.contains("9") == num3.contains("9"))
						{
							System.out.println(num1 + " : " + num2 + " : " + num3);
						}
					}
				}
			}
		}
	}
	
	
	private static boolean isPrime(int num)
	{
		if (num == 1)
			return false;
		if (num == 2)
			return true;
		if (num % 2 == 0)
			return false;
		for (int i = 3; i * i <= num; i += 2)
			if (num % i == 0)
				return false;
		return true;
	}
}
