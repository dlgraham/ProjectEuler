import java.math.BigDecimal;
import java.math.RoundingMode;

public class ReciprocalCycles
{
	public static boolean repeating(String str, int num)
	{
		boolean repeat = false;
		int size = str.length() - 5;
		String a = str.substring(size - num, size);
		String b = str.substring(size - 2 * num, size - num);
		String c = str.substring(size - 3 * num, size - 2 * num);
		if(a.equals(b) && b.equals(c))
		{
			repeat = true;
		}
		return repeat;
	}
	
	
	public static void main(String[] args)
	{
		BigDecimal num;
		BigDecimal divisor;
		int count = 0;
		for(int i = 1; i <= 1000; i++)
		{
			num = new BigDecimal("1");
			divisor = new BigDecimal(i);
			num = num.divide(divisor, 3275, RoundingMode.HALF_UP);
			String str = num.toPlainString();
			boolean repeat = false;
			for(int j = 1; j <= 980; j++)
			{
				if(repeating(str, j))
				{
					repeat = true;
				}
			}			
			if(repeat == false)
			{
				count++;
				System.out.println(i + " : " + str);
			}
		}
		System.out.println(count);
	}
}
